// Prisma schema baseado no diagrama fornecido

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String           @id @default(uuid())
  username      String           @unique
  password      String
  name          String
  email         String           @unique
  age           Int
  apiKey        String
  apiSecret     String
  balance       Float
  imageProfile  String
  pnl           Float   @default(0)
  profit        Float   @default(0)
  balanceDetails Json?
  nif           String          @unique
  historyTrades HistoryTrade[]
  strategies    UserStrategy[]
}

model HistoryTrade {
  id            String   @id @default(uuid())
  tradeId       Int      @unique
  id_user       String
  symbol        String
  price         Float
  amount        Float
  quoteQuantity Float
  gain_loss     Float
  isBuyer       Boolean
  timestamp     DateTime

  user          User     @relation(fields: [id_user], references: [id])
}

model PriceData {
  id           Int       @id @default(autoincrement())
  id_symbol    String     @unique
  timestamp    DateTime
  price        Float
  volume       Float
  ma_7         Float
  ma_25        Float
  ma_99        Float
  rsi          Float
  macd         Float
  dea          Float
  diff         Float

  strategies   UserStrategy[] @relation("PriceDataToUserStrategy")
}
model UserStrategy {
  id             Int       @id @default(autoincrement())
  id_user        String
  id_bot         Int
  id_priceData   Int
  initialBalance Float
  currentBalance Float
  amountHeld     Float     @default(0)
  buy_price      Float
  inPosition     Boolean   @default(false)
  lastAction     String?
  status         Boolean
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  user           User      @relation(fields: [id_user], references: [id])
  bot            Bot       @relation(fields: [id_bot], references: [id])
  priceData      PriceData @relation("PriceDataToUserStrategy", fields: [id_priceData], references: [id])
}



model Bot {
  id                 Int       @id @default(autoincrement())
  strategyName       String
  strategyRisk       String
  strategyDescription String
  timeInterval       String
  defaultMaShort     Float
  defaultMaMid       Float
  defaultMaLong      Float
  defaultRSIPeriod   Float
  defaultMacdFast    Float
  defaultMacdSlow    Float
  defaultMacdSignal  Float
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt

  strategies         UserStrategy[]
}
